version: '3.3'

services:
  kafka:
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_DELETE_RETENTION_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper
    restart: always

  consumer-kafka:
    build:
      context: ./consumer_kafka
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - zookeeper

  producer-kafka:
    build:
      context: ./producer
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - zookeeper 

  demo:
    build:
      context: ./demo
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      - kafka
      - zookeeper
      - consumer-kafka
      - producer-kafka
      - mongodb
    
  mongodb:
    image: mongo 
    container_name: mongo
    ports:
      - "27017:27017" 
